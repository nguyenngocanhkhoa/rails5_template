c
path
c
row['Item Status'].to_s == '1'
!['FULLY-NORMALIZED', 'PARTIALLY-NORMALIZED', 'AUTO-NORMALIZED'].include? row['Item Status']
c
spreadsheet.row(11136)
row(1366)
c
header_out.map{|attr| (row[attr].is_a? String) ? row[attr].upcase : row[attr]}.join("\t")
c
header_out.map{|attr| (row[attr].is_a? String) ? row[attr].upcase : row[attr]}.join("\t")
c
header_out.map{|attr| (row[attr].is_a? String) ? row[attr].upcase : row[attr]}.join("\t")
row["Discerned MfrCatNum"].to_i
row["Discerned MfrCatNum"].to_s
row["Discerned MfrCatNum"].upcase
row["Discerned MfrCatNum"]
row
row["master_item_id"]
exit
c
row["master_item_id"]
c
row["master_item_id"] == "3"
row["master_item_id"]
c
row["master_item_id"]
exit
next
row["master_item_id"] == "21820"
row["master_item_id"]
c
row["master_item_id"]
c
row["master_item_id"]
c
row["master_item_id"]
c
row["master_item_id"] == "21820"
exit
c
row["master_item_id"]
c
row["master_item_id"] == "7539"
row["master_item_id"] == "3"
row["master_item_id"]
row["ITEM-KEY"]
c
row_excel.count
next
row_excel.count
c
row_excel.delete_at(delete_column)
delete_column
row_excel
c
spreadsheet.row(i)
spreadsheet.row(i).count
row_excel.count
row_excel
c
v
c
row_excel
row
next
row_excel
next
row_excel
c
row_excel
row_excel.count
spreadsheet.row(i).count
delete_column
spreadsheet.row(i)
c
spreadsheet.row(i)[39]
spreadsheet.row(i)[38]
c
spreadsheet.row(i)[38]
spreadsheet.row(i)[39]
spreadsheet.row(i)
spreadsheet.row(i)[39]c
spreadsheet.row(i)[38]
spreadsheet.row(i)[39]
spreadsheet.row(i).delete_at(38)
spreadsheet.row(i).delete_at(39)
spreadsheet.row(i)[39]
spreadsheet.row(i)[38]
spreadsheet.row(i)
row
arr
row[38]
row[39]
row
c
arr
c
arr
spreadsheet.row(2)[39]
spreadsheet.row(2)[38]
row(2)[38]
index
exit
c
header
index
exit
c
cc
c
header
c
index
arr
c
spreadsheet.row(1)
spreadsheet.row(0)
spreadsheet.row(2)[1]
spreadsheet.row(2).column(1)
spreadsheet.row(2)
spreadsheet.column("LENGTH").row(2)
spreadsheet.column("LENGTH")
spreadsheet.row(2).column("LENGTH")
spreadsheet.column("LENGTH")
spreadsheet.row(1)
spreadsheet.sheet(0).row(1)
spreadsheet.sheet(0)
spreadsheet.sheet(0).row(1).column("LENGTH")
spreadsheet.sheet(0).row(1)
spreadsheet.sheet(0).column(1)
spreadsheet.column(1)
spreadsheet.sheet(1).column("LENGTH").row(1)
spreadsheet.column("LENGTH").row(1)
spreadsheet.sheets
spreadsheet.sheetS
spreadsheet
spreadsheet.sheet("LENGTH").row(1)
spreadsheet.sheet(LENGTH).row(1)
spreadsheet.sheet(0).row(1)
spreadsheet.sheet('LENGTH').row(1)
spreadsheet.row(1)
row
c
row
header_out
c
@@default_cols
c
@default_cols
next
File.open(path, "w")
path
next
c
path
next
c
Rails.root.to_s
Rails.root.to_str
Rails.root
"/" + filename[0..-5] + "_processed.csv"
Rails.root + "/" + filename[0..-5] + "_processed.csv"
path
filename
path
next
c
filename
c
Rails.root
params[:input].original_filename[0..-5]
params[:input].original_filename[0.-5]
params[:input].original_filename[0..-5]
params[:input].original_filename
ouput
c
params[:input].original_filename.split(".")[0]
params[:input].original_filename
params[:input].to_json
params[:input]->original_filename
params[:input]->@original_filename
params[:input]->@original_filename=
params[:input].path
params[:input]
params[:input]["filename"]
params[:input][:filename]
params[:input][:filename=]
params[:input]
params[:input].filename
params[:input]["filename"]
params[:input]["filename]
params[:input]
c
header_out.join("\t")
header_out.    f.puts(@default_cols.join("\t"))
header_out
c
header_out.map{|attr| row[attr] }
c
header_out.join("\t")
header_out
c
row
continue
row["LENGTH"]
row["LENGHT"]
row["length"]
row
exit
C
c
header_out.join("\t")
header_out
c
filename
filename.path
filename
filename.path[0..-5]
filename[0..-5]
filename
exit
c
csv
c
row[attr]
row.send(attr)
attr
row
header_out.map{ |attr| row.send(attr) }
exit
c
row
c
spreadsheet
row["master_item_id"]
row
c
spreadsheet.row(1).count
header.count
header_out.count
header_out
spreadsheet.last_row
spreadsheet.row(1).count
spreadsheet.row(1)
c
header
c
C
        header_ouput = header.insert(4, 'ITEM-KEY')
header
spreadsheet.info
header.count
header
c
